# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/greenstar
spring.datasource.username= root
spring.datasource.password= hello123
spring.datasource.driverClassName = com.mysql.jdbc.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

# velocity配置
#encoding
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8
spring.velocity.properties.eventhandler.referenceinsertion.class = org.apache.velocity.app.event.implement.EscapeHtmlReference
spring.velocity.properties.eventhandler.referenceinsertion.class = org.apache.velocity.app.event.implement.EscapeSqlReference
spring.velocity.properties.eventhandler.escape.html.match = /_html_*/
spring.velocity.properties.eventhandler.escape.sql.match = /_sql_*/
spring.velocity.properties.contentType=text/html;charset=UTF-8
#autoreload when vm changed
spring.velocity.properties.file.resource.loader.cache=false
spring.velocity.properties.file.resource.loader.modificationCheckInterval=1
spring.velocity.properties.velocimacro.library.autoreload=true
#re-loading macros by this 
spring.velocity.properties.velocimacro.permissions.allow.inline.to.replace.global=true
spring.velocity.properties.velocimacro.permissions.allow.inline.local.scope=true
#spring.velocity.properties.velocimacro.context.localscope=true
spring.velocity.properties.parser.pool.class = org.apache.velocity.runtime.ParserPoolImpl
spring.velocity.properties.parser.pool.size = 500
#macro
spring.velocity.properties.velocimacro.library=/templates/common/macro.vm
#velocimacro.library=/WEB-INF/template/macro.vm
spring.velocity.properties.resource.loader=class
#class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader 
spring.velocity.properties.class.resource.loader.class=com.greenstar.velocity.EimClasspathResourceLoader 
spring.velocity.properties.class.resource.loader.cache=true
spring.velocity.properties.class.resource.loader.modificationCheckInterval=1
spring.velocity.order=-2
spring.velocity.content-type=text/html;charset=UTF-8
spring.velocity.cache=true
spring.velocity.prefix=/templates/
spring.velocity.suffix=.vm
spring.velocity.request-context-attribute=rc
spring.velocity.toolbox-config-location=/WEB-INF/velocity-toolbox.xml
